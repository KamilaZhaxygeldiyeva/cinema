--1 Create or replace procedure logging_p(
    new_id in out number,
    new_name in users.name%type) is
v_id NUMBER:=ROUND(DBMS_RANDOM.value(1, 99)); 
v_old_id NUMBER; 
v_old_name corresponding_log.old_name%TYPE; 
begin
    insert into users values(new_id, new_name);
exception when DUP_VAL_ON_INDEX then
    select id, name into v_old_id, v_old_name from users where id = new_id;
    update users set name = new_name where id = new_id;
    insert into corresponding_log values(v_id, sysdate, v_old_id, new_id, v_old_name, new_name,Null, null);
end logging_p;


--2 Create or replace trigger user_tr
after delete or insert or update on users
for each row
enable
declare
v_id NUMBER:=ROUND(DBMS_RANDOM.value(1, 99)); 
v_user varchar2(20);
begin
Select user into v_user from dual;
if inserting then
Insert into corresponding_log(id,operation_date, old_id, new_id, old_name, new_name, action, actionauthor)
Values(v_id, sysdate, :old.id, :new.id, :old.name, :new.name, 'insert', v_user);
elsif deleting then
Insert into corresponding_log(id,operation_date, old_id, new_id, old_name, new_name, action, actionauthor)
Values(v_id, sysdate, :old.id, :new.id, :old.name, :new.name, 'delete', v_user);
elsif updating then
Insert into corresponding_log(id,operation_date, old_id, new_id, old_name, new_name, action, actionauthor)
Values(v_id, sysdate, :old.id, :new.id, :old.name, :new.name, 'update', v_user);
end if;
end; 

—3 Create table schema_audit(
object_name varchar2(15),
ddl_operation varchar2(15)
);

Create or replace trigger creating_table
After create on Schema
Begin
    Insert Into schema_audit values(ora_dict_obj_name, ora_sysevent);
end;

—4 CREATE OR REPLACE PROCEDURE get_departments IS 
TYPE t_dep IS TABLE OF departments%ROWTYPE INDEX BY BINARY_INTEGER; 
v_deptab t_dep; 
BEGIN 
SELECT * BULK COLLECT INTO v_deptab FROM departments; 
 FOR i in v_deptab.FIRST..v_deptab.LAST LOOP 
 IF v_deptab.EXISTS(i) THEN 
 DBMS_OUTPUT.PUT_LINE(v_deptab(i).department_name); 
END IF; 
END LOOP; 
END get_departments;

--5
DECLARE 
 TYPE t_empid IS TABLE OF emp_temp.employee_id%TYPE INDEX BY BINARY_INTEGER; 
 TYPE t_empname IS TABLE OF emp_temp.first_name%TYPE INDEX BY BINARY_INTEGER; 
 v_empidtab t_empid; 
 v_empnametab t_empname; 
BEGIN  
 SELECT employee_id BULK COLLECT INTO v_empidtab  
 FROM emp_temp WHERE department_id = 20; 
 FORALL i IN v_empidtab.FIRST..v_empidtab.LAST 
 DELETE FROM emp_temp WHERE employee_id = v_empidtab(i) 
 RETURNING first_name BULK COLLECT INTO v_empnametab; 
 FOR i IN v_empidtab.FIRST..v_empidtab.LAST LOOP 
 DBMS_OUTPUT.PUT_LINE('Employee #'  v_empidtab(i)  ': ' || v_empnametab(i)); 
 END LOOP; 
END;